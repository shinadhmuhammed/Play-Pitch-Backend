"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const OwnerController_1 = __importDefault(require("../../Adapters/Controllers/OwnerController"));
const multer_1 = __importDefault(require("../Middlewares/multer"));
const jwtOwner_1 = __importDefault(require("../Middlewares/jwt/jwtOwner"));
const OwnerRouter = express_1.default.Router();
const multerUpload = multer_1.default;
OwnerRouter.post("/ownersignup", OwnerController_1.default.signup);
OwnerRouter.post("/verifyotp", OwnerController_1.default.verifyOtp);
OwnerRouter.post("/resendotp", OwnerController_1.default.resendOtp);
OwnerRouter.post("/ownerlogin", OwnerController_1.default.ownerLogin);
OwnerRouter.post("/forgot-password", OwnerController_1.default.passwordForgot);
OwnerRouter.post('/otp-forgot', OwnerController_1.default.ForgotPasswordOtp);
OwnerRouter.post('/verify-forgot', OwnerController_1.default.verifyForgotOtp);
OwnerRouter.post("/addturf", multerUpload.array("file"), jwtOwner_1.default.verifyOwnerJwt, OwnerController_1.default.addTurf);
OwnerRouter.get("/getownerturf", jwtOwner_1.default.verifyOwnerJwt, OwnerController_1.default.getOwnerTurf);
OwnerRouter.get("/getownerturf/:id", jwtOwner_1.default.verifyOwnerJwt, OwnerController_1.default.getOwnerTurfById);
OwnerRouter.put("/editturf/:id", multerUpload.array('file'), jwtOwner_1.default.verifyOwnerJwt, OwnerController_1.default.editTurf);
OwnerRouter.delete("/deleteturf/:id", jwtOwner_1.default.verifyOwnerJwt, OwnerController_1.default.deleteTurf);
OwnerRouter.get("/getbookingsforowner/:turfId", jwtOwner_1.default.verifyOwnerJwt, OwnerController_1.default.getBookingsForTurf);
OwnerRouter.get("/ownerdetails", jwtOwner_1.default.verifyOwnerJwt, OwnerController_1.default.ownerDetails);
OwnerRouter.put("/editownerdetails", jwtOwner_1.default.verifyOwnerJwt, OwnerController_1.default.editOwnerDetails);
OwnerRouter.post("/change-password", jwtOwner_1.default.verifyOwnerJwt, OwnerController_1.default.changePassword);
OwnerRouter.post("/cancelbookings", jwtOwner_1.default.verifyOwnerJwt, OwnerController_1.default.cancelBooking);
OwnerRouter.get("/dashboard-data", jwtOwner_1.default.verifyOwnerJwt, OwnerController_1.default.getDashboardData);
exports.default = OwnerRouter;
